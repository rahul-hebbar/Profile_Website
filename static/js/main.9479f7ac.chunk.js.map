{"version":3,"sources":["component/BgImgComp.js","component/ContComp.js","component/NavComp.js","component/ParComp.js","component/TechComp.js","component/HomeComp.js","component/AchComp.js","component/ExpComp.js","App.js","index.js"],"names":["BgImg","src","process","alt","zIndex","width","height","position","filter","ContComp","props","onClose","isOpen","isCentered","spacing","leftIcon","colorScheme","variant","size","href","isExternal","NavComp","useDisclosure","onOpen","flexDir","h","onClick","setOption","_focus","outline","boxShadow","fontSize","color","option","cursor","_hover","bgColor","ParComp","t","l","params","particles","number","value","TechComp","useState","data","setData","useEffect","fetch","then","resp","json","d","justify","map","ele","ind","bg","p","maxWidth","borderRadius","overflow","font","orientation","name","ls","direction","ml","img","boxSize","split","HomeComp","as","AiFillGithub","AiFillLinkedin","AchComp","butid","setButid","butAction","event","target","id","paddingBottom","year","pos","projcat","proj","logo","flexDirection","onContextMenu","e","preventDefault","ExpComp","console","log","allowToggle","borderColor","borderWidth","flex","textAlign","desc","lib","link","App","RouteLog","padding","align","bottom","right","opacity","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9479f7ac.chunk.js","sourcesContent":["import { Image } from \"@chakra-ui/react\";\r\n\r\nexport default function BgImg() {\r\n  return (\r\n    <>\r\n      <Image\r\n        src={process.env.PUBLIC_URL + \"/assets/bg.jpg\"}\r\n        alt=\"bg\"\r\n        zIndex=\"-2\"\r\n        width=\"100vw\"\r\n        height=\"100vh\"\r\n        position=\"fixed\"\r\n        filter=\"brightness(40%)\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  Link,\r\n  Button,\r\n  VStack,\r\n} from \"@chakra-ui/react\";\r\nimport { AiFillLinkedin } from \"react-icons/ai\";\r\nimport { SiGmail } from \"react-icons/si\";\r\n\r\nexport default function ContComp(props) {\r\n  return (\r\n    <Modal onClose={props.onClose} isOpen={props.isOpen} isCentered>\r\n      <ModalOverlay />\r\n      <ModalContent>\r\n        <ModalHeader>Contact Me!!</ModalHeader>\r\n        <ModalCloseButton />\r\n        <ModalBody>\r\n          <VStack spacing=\"5vh\">\r\n            <Button\r\n              leftIcon={<AiFillLinkedin />}\r\n              colorScheme=\"teal\"\r\n              variant=\"link\"\r\n              size=\"lg\"\r\n            >\r\n              <Link\r\n                href=\"https://www.linkedin.com/in/p-r-hebbar\"\r\n                isExternal={true}\r\n              >\r\n                Linkedin\r\n              </Link>\r\n            </Button>\r\n            <Button\r\n              leftIcon={<SiGmail />}\r\n              colorScheme=\"teal\"\r\n              variant=\"link\"\r\n              size=\"lg\"\r\n            >\r\n              <Link href=\"mailto: r.hebbar1998@gmail.com\" isExternal={true}>\r\n                My Email\r\n              </Link>\r\n            </Button>\r\n          </VStack>\r\n        </ModalBody>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n","import { Button, Flex, HStack, Text, useDisclosure } from \"@chakra-ui/react\";\r\nimport ContComp from \"./ContComp\";\r\n\r\nexport default function NavComp(props) {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <>\r\n      <Flex flexDir=\"row-reverse\" h=\"5vh\">\r\n        <HStack spacing=\"5vh\">\r\n          <Button\r\n            onClick={() => props.setOption(\"home\")}\r\n            colorScheme=\"transparent\"\r\n            _focus={{ outline: \"none\", boxShadow: \"none\" }}\r\n          >\r\n            <Text\r\n              fontSize=\"2xl\"\r\n              color={props.option === \"home\" ? \"cyan\" : \"white\"}\r\n              cursor=\"pointer\"\r\n            >\r\n              Home\r\n            </Text>\r\n          </Button>\r\n          <Button\r\n            onClick={() => props.setOption(\"exp\")}\r\n            colorScheme=\"transparent\"\r\n            _focus={{ outline: \"none\", boxShadow: \"none\" }}\r\n          >\r\n            <Text\r\n              fontSize=\"2xl\"\r\n              color={props.option === \"exp\" ? \"cyan\" : \"white\"}\r\n              cursor=\"pointer\"\r\n            >\r\n              Experience\r\n            </Text>\r\n          </Button>\r\n          <Button\r\n            onClick={() => props.setOption(\"achi\")}\r\n            colorScheme=\"transparent\"\r\n            _focus={{ outline: \"none\", boxShadow: \"none\" }}\r\n          >\r\n            <Text\r\n              fontSize=\"2xl\"\r\n              color={props.option === \"achi\" ? \"cyan\" : \"white\"}\r\n              cursor=\"pointer\"\r\n            >\r\n              Achievements\r\n            </Text>\r\n          </Button>\r\n          <Button\r\n            onClick={() => props.setOption(\"tech\")}\r\n            colorScheme=\"transparent\"\r\n            _focus={{ outline: \"none\", boxShadow: \"none\" }}\r\n          >\r\n            <Text\r\n              fontSize=\"2xl\"\r\n              color={props.option === \"tech\" ? \"cyan\" : \"white\"}\r\n              cursor=\"pointer\"\r\n            >\r\n              Technical Skills\r\n            </Text>\r\n          </Button>\r\n          <Button\r\n            fontSize=\"2xl\"\r\n            colorScheme=\"teal\"\r\n            variant=\"solid\"\r\n            _hover={{ bgColor: \"orange.500\" }}\r\n            onClick={onOpen}\r\n          >\r\n            Contact\r\n          </Button>\r\n          <ContComp onClose={onClose} isOpen={isOpen} />\r\n        </HStack>\r\n      </Flex>\r\n    </>\r\n  );\r\n}\r\n","import Particles from \"react-particles-js\";\r\nimport { Box } from \"@chakra-ui/react\";\r\n\r\nexport default function ParComp() {\r\n  return (\r\n    <Box position=\"fixed\" t=\"0\" l=\"0\" zIndex=\"-1\">\r\n      <Particles\r\n        params={{\r\n          particles: {\r\n            number: {\r\n              value: 80,\r\n            },\r\n            size: {\r\n              value: 3,\r\n            },\r\n          },\r\n        }}\r\n        width=\"100vw\"\r\n        height=\"100vh\"\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n  UnorderedList,\r\n  ListItem,\r\n  Wrap,\r\n  WrapItem,\r\n  Box,\r\n  Heading,\r\n  Image,\r\n  Stack,\r\n  Badge,\r\n  VStack,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function TechComp() {\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(\r\n    () =>\r\n      fetch(`${process.env.PUBLIC_URL}/data/TechData.json`)\r\n        .then((resp) => resp.json())\r\n        .then((d) => setData(d)),\r\n    []\r\n  );\r\n  return (\r\n    <>\r\n      <VStack spacing=\"3vh\">\r\n        <Heading size=\"xl\" color=\"white\">\r\n          My Skills and Expertise\r\n        </Heading>\r\n        <Wrap justify=\"center\" spacing=\"5vh\">\r\n          {data\r\n            ? data.map((ele, ind) => (\r\n                <WrapItem>\r\n                  <Box\r\n                    bg={ele.color}\r\n                    p={4}\r\n                    maxWidth=\"30vw\"\r\n                    borderRadius=\"lg\"\r\n                    overflow=\"hidden\"\r\n                  >\r\n                    <Heading\r\n                      p={2}\r\n                      color=\"white\"\r\n                      font=\"lg\"\r\n                      orientation=\"horizontal\"\r\n                    >\r\n                      {ele.name}\r\n                    </Heading>\r\n                    <UnorderedList color=\"white\">\r\n                      {ele.ls.map((ind) => (\r\n                        <Stack direction=\"row\">\r\n                          <ListItem>{ind[0]}</ListItem>\r\n                          <Badge\r\n                            ml=\"1\"\r\n                            variant=\"subtle\"\r\n                            colorScheme=\"green\"\r\n                            h=\"3vh\"\r\n                          >\r\n                            {ind[1]}\r\n                          </Badge>\r\n                        </Stack>\r\n                      ))}\r\n                    </UnorderedList>\r\n                    <Wrap spacing=\"2vh\" justify=\"center\">\r\n                      {ele.img.map((ind) => (\r\n                        <WrapItem>\r\n                          <Image\r\n                            boxSize=\"15vh\"\r\n                            src={process.env.PUBLIC_URL + ind}\r\n                            alt={ind.split(\"/\")[-1]}\r\n                            p={2}\r\n                          />\r\n                        </WrapItem>\r\n                      ))}\r\n                    </Wrap>\r\n                  </Box>\r\n                </WrapItem>\r\n              ))\r\n            : \"\"}\r\n        </Wrap>\r\n      </VStack>\r\n    </>\r\n  );\r\n}\r\n","import { Avatar, VStack, Text, HStack, Icon, Link } from \"@chakra-ui/react\";\r\nimport { AiFillGithub, AiFillLinkedin } from \"react-icons/ai\";\r\n\r\nexport default function HomeComp() {\r\n  return (\r\n    <VStack spacing={8}>\r\n      <Avatar\r\n        size=\"2xl\"\r\n        name=\"prof\"\r\n        src={process.env.PUBLIC_URL + \"/assets/Photo.jpg\"}\r\n      />\r\n      <Text color=\"white\" fontSize=\"4xl\">\r\n        I'm Rahul\r\n      </Text>\r\n      <Text color=\"white\" fontSize=\"3xl\">\r\n        B.Tech Graduate from IIIT Trichy - ECE\r\n      </Text>\r\n      <HStack spacing={5}>\r\n        <Link href=\"https://github.com/rahul-hebbar\" isExternal>\r\n          <Icon as={AiFillGithub} boxSize=\"2em\" color=\"white\" />\r\n        </Link>\r\n        <Link href=\"https://www.linkedin.com/in/p-r-hebbar\" isExternal>\r\n          <Icon as={AiFillLinkedin} boxSize=\"2em\" color=\"white\" />\r\n        </Link>\r\n      </HStack>\r\n    </VStack>\r\n  );\r\n}\r\n","import {\r\n  WrapItem,\r\n  VStack,\r\n  Wrap,\r\n  Text,\r\n  Box,\r\n  Heading,\r\n  HStack,\r\n  Container,\r\n  Avatar,\r\n  Flex,\r\n  Button,\r\n  useDisclosure,\r\n  ModalBody,\r\n  Modal,\r\n  ModalOverlay,\r\n  Image,\r\n  ModalContent,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function AchComp() {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [butid, setButid] = useState(0);\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(\r\n    () =>\r\n      fetch(`${process.env.PUBLIC_URL}/data/AchiData.json`)\r\n        .then((resp) => resp.json())\r\n        .then((d) => setData(d)),\r\n    []\r\n  );\r\n\r\n  function butAction(event) {\r\n    setButid(event.target.id);\r\n    onOpen();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <VStack spacing=\"3vh\">\r\n        <Wrap justify=\"center\" spacing=\"5vh\">\r\n          {data\r\n            ? data.map((ele, ind) => (\r\n                <WrapItem>\r\n                  <Box\r\n                    bg=\"teal.500\"\r\n                    p={4}\r\n                    maxWidth=\"30vw\"\r\n                    borderRadius=\"lg\"\r\n                    overflow=\"hidden\"\r\n                  >\r\n                    <Heading size=\"md\" color=\"white\" paddingBottom={2}>\r\n                      {ele.name}\r\n                    </Heading>\r\n                    <HStack spacing=\"2vh\">\r\n                      <Container>\r\n                        <Text size=\"sm\" color=\"gold\">\r\n                          <b>Year:</b> {ele.year}\r\n                        </Text>\r\n                        <Text size=\"sm\" color=\"white\">\r\n                          <b>Position:</b> {ele.pos}\r\n                        </Text>\r\n                        <Text size=\"sm\" color=\"gold\">\r\n                          <b>Project Category:</b> {ele.projcat}\r\n                        </Text>\r\n                        <Text size=\"sm\" color=\"white\">\r\n                          <b>Project:</b> {ele.proj}\r\n                        </Text>\r\n                      </Container>\r\n                      <Avatar\r\n                        size=\"xl\"\r\n                        src={process.env.PUBLIC_URL + ele.logo}\r\n                      />\r\n                    </HStack>\r\n                    <Flex flexDirection=\"row-reverse\">\r\n                      <Button\r\n                        colorScheme=\"teal\"\r\n                        variant=\"solid\"\r\n                        id={ind}\r\n                        onClick={butAction}\r\n                      >\r\n                        View Certificate\r\n                      </Button>\r\n                    </Flex>\r\n                  </Box>\r\n                </WrapItem>\r\n              ))\r\n            : \"\"}\r\n        </Wrap>\r\n        <Text size=\"xs\" color=\"white\">\r\n          Project links can be found in Experience page\r\n        </Text>\r\n      </VStack>\r\n      <Modal isOpen={isOpen} onClose={onClose} size=\"2xl\">\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalBody>\r\n            <Image\r\n              src={data ? process.env.PUBLIC_URL + data[butid].img : \"\"}\r\n              onContextMenu={(e) => e.preventDefault()}\r\n            />\r\n          </ModalBody>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Accordion,\r\n  AccordionButton,\r\n  AccordionIcon,\r\n  AccordionItem,\r\n  AccordionPanel,\r\n  Box,\r\n  Text,\r\n  Wrap,\r\n  WrapItem,\r\n  VStack,\r\n  Badge,\r\n  Link,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function ExpComp() {\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(\r\n    () =>\r\n      fetch(`${process.env.PUBLIC_URL}/data/ExpData.json`)\r\n        .then((resp) => resp.json())\r\n        .then((d) => {\r\n          console.log(d);\r\n          setData(d);\r\n        }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Box bg=\"teal\" width=\"95vw\">\r\n      <Accordion allowToggle color=\"white\">\r\n        <Wrap spacing=\"2vw\" justify=\"center\" p={4}>\r\n          {data\r\n            ? data.map((ele) => (\r\n                <WrapItem>\r\n                  <AccordionItem\r\n                    width=\"25vw\"\r\n                    borderColor=\"white\"\r\n                    borderWidth=\"2px\"\r\n                    borderRadius=\"md\"\r\n                    p={1}\r\n                  >\r\n                    <AccordionButton>\r\n                      <Text flex=\"1\" textAlign=\"left\" fontSize=\"md\">\r\n                        <b>{ele.name}</b>\r\n                      </Text>\r\n                      <AccordionIcon />\r\n                    </AccordionButton>\r\n                    <AccordionPanel>\r\n                      <VStack>\r\n                        <Text>{ele.desc}</Text>\r\n                        <Wrap spacing=\"1vh\">\r\n                          {ele.lib.map((e) => (\r\n                            <WrapItem>\r\n                              <Badge colorScheme=\"purple\">{e}</Badge>\r\n                            </WrapItem>\r\n                          ))}\r\n                        </Wrap>\r\n                        <Link href={ele.link} isExternal>\r\n                          View Project\r\n                        </Link>\r\n                      </VStack>\r\n                    </AccordionPanel>\r\n                  </AccordionItem>\r\n                </WrapItem>\r\n              ))\r\n            : \"\"}\r\n        </Wrap>\r\n      </Accordion>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport BgImg from \"component/BgImgComp\";\nimport Navcomp from \"component/NavComp\";\nimport ParComp from \"component/ParComp\";\nimport TechComp from \"component/TechComp\";\nimport { Box, Flex, Spacer, Text } from \"@chakra-ui/react\";\nimport HomeComp from \"component/HomeComp\";\nimport AchComp from \"component/AchComp\";\nimport ExpComp from \"component/ExpComp\";\n\nexport default function App() {\n  const [option, setOption] = useState(\"home\");\n\n  function RouteLog(props) {\n    if (props.option === \"home\") {\n      return <HomeComp />;\n    } else if (props.option === \"tech\") {\n      return <TechComp />;\n    } else if (props.option === \"achi\") {\n      return <AchComp />;\n    } else if (props.option === \"exp\") {\n      return <ExpComp />;\n    }\n  }\n  return (\n    <>\n      <BgImg />\n      <ParComp />\n      <Box position=\"relative\" padding=\"2vh\" color=\"blue\">\n        <Navcomp option={option} setOption={setOption} />\n        <Flex align=\"center\" h=\"90vh\">\n          <Spacer />\n          <RouteLog option={option} />\n          <Spacer />\n        </Flex>\n        <Box position=\"absolute\" bottom=\"0\" right=\"0\">\n          <Text fontSize=\"xs\" color=\"white\" opacity=\"30%\">\n            Photo by Joshua Reddekopp on Unsplash\n          </Text>\n        </Box>\n      </Box>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nReactDOM.render(\n  <ChakraProvider>\n    <App />\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}